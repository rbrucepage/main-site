<html><head><title>chickenman</title></head><body><font color="red">My PHP code makes this page say:</font><p><?//jumping between php and html in a function definition.function foo() {	print "Enter foo...";?>Some HTML inside foo...<?	print "Leave foo.";}foo();print ("<p>");?><?php//mixing php and html to make an if/then statement.if (strpos($_SERVER["HTTP_USER_AGENT"], "MSIE") !== false) {?><h3>strpos must have returned non-false</h3><center><b>You are using Internet Explorer</b></center><?php} else {?><h3>strpos must have returned false</h3><center><b>You are not using Internet Explorer</b></center><?php}print ("<p>");?><?php//check what sort of browser the visitor is using. echo $_SERVER["HTTP_USER_AGENT"];print ("<p>");//creating a function with no argument.function ChickenMan(){ print "<b>I am the CHICKEN MAN!</b>";}//use function.ChickenMan();print ("<p>");// this script is an example of an array// and calling an array.$critters = array ("Phoebe", "Ruby", "Rotty");print "$critters[2]";print ("<p>");// this is a multidimensional array.// it is used to create arrays within an array.$animals = array (		array ( "name" => "Phoebe",				"type" => "dog",				"color" => "grey and white",				"age" => 7 ),		array ( "name" => "Ruby",				"type" => "dog",				"color" => "brown and white",				"age" =>7 ),		array ( "name" => "Rotty",				"type" => "squirrel",				"color" => "grey",				"age" =>2 ),		array ( "name" => "Opie",				"type" => "cat",				"color" => "grey tabby",				"age" => 5 )					);					print $animals[2]["type"];print ("<br>");print $animals[3]["color"];print ("<p>");					// this is an associative array.// it indexes contained elements by names.					$CujoDog = array (		name=>"Cujo",		description=>"short dog",		color=>"black and white",		age=>7				);				print $CujoDog[color];// this is an example of a variable.// utterance is the variable.// it was used, re-defined and used again.print ("<p>");print ("<font color='#F654A0'>");$utterance = "I love you!";print ("When I'm happy, I want to say $utterance");print ("<br>");$utterance = "I will smite you!";print ("When I'm angry, I want to say $utterance");print ("</font>");print ("<p>");// first, this $PHP_SELF thang is // an environment variable that'll show the // path from your root folder to this // document itself, like /webmonkey_article/test3.php.// I put this in just for fun. // NOTE: This may only work if your server is Apache.print "$PHP_SELF";// next we have to "print" any // HTML code we want the browser // to follow to determine // the layout of the results page. // In this case, we're adding a <p> tag// the <p> tags could have been put // inside the same print statement as the // "I am the CHICKEN MAN" text.// between the $PHP_SELF text and the // next bunch of stuff.print ("<p>");print ("\"I am the CHICKEN MAN\"");print ("<p>");/* This next "phpinfo" business outputs a long page that tells you exactly how your version of PHP is configured. This can be useful when troubleshooting problems down the road */phpinfo();?></body></html>